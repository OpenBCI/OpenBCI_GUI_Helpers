image:
- Visual Studio 2019

stack: python 3

environment:
  PY_DIR: C:\Python36-x64
  AWS_ACCESS_KEY_ID:
    secure: 41Lh3mnlU+lVcr5eX3bTgmsKqcebacVgDOww7zb0r4E=
  AWS_SECRET_ACCESS_KEY:
    secure: jeVYQ02OTywaENrIcWvoZg+YzGnhiluCDes/kaJE4NeVIZqjlipFt5yXxCct9S5w
  PYPI_PASSWORD:
    secure: iwHCe7zJP1fu+Jv03MC+ArVwcbANHouo7xvXkJvqXPQ=
  GITHUB_TOKEN:
    secure: LrDw5C81iZpUPzP6fbzej6tzZvu59lQSXHPsYvx9DmG+LQXOewUdh4c460Jn1GC/

clone_depth: 3

build: off

init:
  - cmd: set PATH=%PY_DIR%;%PY_DIR%\Scripts;C:\Program Files\Java\jdk1.8.0\bin;%PATH%
  - cmd: set JAVA_HOME=C:\Program Files\Java\jdk1.8.0

install:
  - mkdir %APPVEYOR_BUILD_FOLDER%\build64 && cd %APPVEYOR_BUILD_FOLDER%\build64 && cmake -G "Visual Studio 16 2019" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.19041.0 -DCMAKE_INSTALL_PREFIX=..\installed64\ .. && cmake --build . --config Release > build64_stdout.txt
  # mvn package for java
  - cd %APPVEYOR_BUILD_FOLDER%\java-package\openbci_gui_helpers && mvn package > maven_package_stdout.txt
deploy_script:
  - python -m pip install awscli > awscli_install.txt
  # download files from travis using S3 create package and publish it
  - ps: >-
      $lin = $false;
      $osx = $false;
      for ($i=0; $i -lt 30; $i++) {
        # wait 30 minutes or until mac and linux binaries appear in s3
        aws s3 ls s3://openbci-gui-helpers/$env:APPVEYOR_REPO_COMMIT/linux_success;
        $lin = $?;
        aws s3 ls s3://openbci-gui-helpers/$env:APPVEYOR_REPO_COMMIT/osx_success;
        $osx = $?
        if($lin -and $osx) {break}
        # stop waiting if linux or mac tests fail
        aws s3 ls s3://openbci-gui-helpers/$env:APPVEYOR_REPO_COMMIT/linux_failure;
        $lin_fail = $?;
        aws s3 ls s3://openbci-gui-helpers/$env:APPVEYOR_REPO_COMMIT/osx_failure;
        $osx_fail = $?
        if($lin_fail -or $osx_fail) {
          write-output "Skip deployment, travis build failed"
          break
        }
        Start-Sleep -s 60;
        echo "not found"
      }
      If ($lin -and $osx) {
        write-output "Binaries found - running deployment"
        New-Item $env:APPVEYOR_BUILD_FOLDER\linux -itemtype directory
        New-Item $env:APPVEYOR_BUILD_FOLDER\osx -itemtype directory
        aws s3 cp s3://openbci-gui-helpers/$env:APPVEYOR_REPO_COMMIT/linux/ $env:APPVEYOR_BUILD_FOLDER\linux\ --recursive
        ls  $env:APPVEYOR_BUILD_FOLDER\linux
        aws s3 cp s3://openbci-gui-helpers/$env:APPVEYOR_REPO_COMMIT/osx/ $env:APPVEYOR_BUILD_FOLDER\osx\ --recursive
        ls $env:APPVEYOR_BUILD_FOLDER\osx
        cd $env:APPVEYOR_BUILD_FOLDER\java-package\openbci_gui_helpers
        Copy-Item "$env:APPVEYOR_BUILD_FOLDER\linux\*" -Destination "$env:APPVEYOR_BUILD_FOLDER\java-package\openbci_gui_helpers\src\main\resources" -Recurse
        Copy-Item "$env:APPVEYOR_BUILD_FOLDER\osx\*" -Destination "$env:APPVEYOR_BUILD_FOLDER\java-package\openbci_gui_helpers\src\main\resources" -Recurse
        ls $env:APPVEYOR_BUILD_FOLDER\java-package\openbci_gui_helpers\src\main\resources;
        mvn package > mvn_final_stdout.txt
        #upload .jars to aws
        aws s3 cp %APPVEYOR_BUILD_FOLDER%\java-package\openbci_gui_helpers\target\ s3://openbci-gui-helpers/%APPVEYOR_REPO_COMMIT%/jars --recursive
      }
      Else {
        write-output "Failed to wait for mac and linux libs"
      }

on_finish:
  - appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\build64\build64_stdout.txt

notifications:
  - provider: Email
    to:
      - '{{commitAuthorEmail}}'
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
